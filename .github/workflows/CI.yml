name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: "*"
jobs:
  test:
    name: Julia ${{ matrix.version }} − ${{ matrix.os }} - ${{ matrix.arch }} − ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6"
          - "1"
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: runner.os−test−${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            runner.os−test−
            ${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: |
          cd docs
          julia --project --code-coverage=user --color=yes -e '
            using Pkg;
            Pkg.instantiate();
            Pkg.test("OpenTelemetryAPI", coverage=true)
            Pkg.test("OpenTelemetrySDK", coverage=true)
            Pkg.test("OpenTelemetryProto", coverage=false)  # auto generated, no need to measure coverage
            Pkg.test("OpenTelemetryExporterOtlpProtoHttp", coverage=true)
            Pkg.test("OpenTelemetryExporterPrometheus", coverage=true)'
        shell: bash
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1"
      - name: Build docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
        run: |
          cd docs
          julia --project --color=yes -e '
            using Pkg;
            Pkg.instantiate();
            Pkg.build("OpenTelemetryProto");
            include("make.jl")'
